# .env - Environment Variables Configuration
# 
# WHAT YOU NEED TO PROVIDE FROM YOUR SIDE:
# 1. Copy this file to .env (without .example extension)
# 2. Replace all placeholder values with your actual configurations
# 3. NEVER commit .env file to version control (add to .gitignore)
# 4. Keep this file secure - it contains sensitive information

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database URL - Choose one based on your database type:

# SQLite (for development - no additional setup required)
DATABASE_URL=sqlite:///./employees.db

# PostgreSQL (recommended for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/employee_db
# DB_USER=your_postgres_username
# DB_PASSWORD=your_postgres_password
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=employee_db

# MySQL (alternative for production)
# DATABASE_URL=mysql+pymysql://username:password@localhost:3306/employee_db
# DB_USER=your_mysql_username
# DB_PASSWORD=your_mysql_password
# DB_HOST=localhost
# DB_PORT=3306
# DB_NAME=employee_db

# =============================================================================
# ELASTICSEARCH CONFIGURATION
# =============================================================================

# Elasticsearch URL and credentials
# You need to provide these from your Elasticsearch setup:

# For Elastic Cloud (recommended):
# 1. Sign up at https://cloud.elastic.co/
# 2. Create a deployment
# 3. Get your endpoint URL and API key
ELASTIC_URL=https://your-deployment-id.es.region.gcp.elastic.cloud:443
ELASTIC_API_KEY=your_api_key_from_elastic_cloud

# Alternative: Username/Password authentication
# ELASTIC_USERNAME=elastic
# ELASTIC_PASSWORD=your_elastic_password

# For local Elasticsearch (development):
# ELASTIC_URL=http://localhost:9200
# ELASTIC_USERNAME=elastic
# ELASTIC_PASSWORD=changeme

# Index names (customize based on your environment)
INDEX_EMPLOYEE=employees
INDEX_DOCS=documents

# For different environments, you might want:
# INDEX_EMPLOYEE=dev_employees
# INDEX_DOCS=dev_documents

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application environment
ENVIRONMENT=development
# ENVIRONMENT=production

# API Configuration
API_HOST=127.0.0.1
API_PORT=8000
API_RELOAD=true

# For production:
# API_HOST=0.0.0.0
# API_PORT=8000
# API_RELOAD=false

# =============================================================================
# SECURITY CONFIGURATION (Optional)
# =============================================================================

# Secret key for JWT tokens (generate a secure random string)
# SECRET_KEY=your-super-secure-secret-key-here-generate-a-random-one

# JWT Configuration
# JWT_ALGORITHM=HS256
# JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Key for external integrations
# API_KEY=your-api-key-for-external-services

# =============================================================================
# GITHUB INTEGRATION (Optional)
# =============================================================================

# GitHub OAuth configuration (if implementing GitHub login)
# GITHUB_CLIENT_ID=your_github_oauth_app_client_id
# GITHUB_CLIENT_SECRET=your_github_oauth_app_client_secret

# GitHub Personal Access Token (for repository access)
# GITHUB_TOKEN=your_github_personal_access_token

# GitHub Repository (for storing documentation or configs)
# GITHUB_REPO=your-username/your-repo-name

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Redis (for caching and session storage)
# REDIS_URL=redis://localhost:6379/0

# Email configuration (for notifications)
# SMTP_SERVER=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password

# File storage (if handling file uploads)
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_S3_BUCKET=your-s3-bucket-name
# AWS_REGION=us-east-1

# =============================================================================
# LOGGING & MONITORING (Optional)
# =============================================================================

# Log level
LOG_LEVEL=INFO
# LOG_LEVEL=DEBUG  # For development
# LOG_LEVEL=ERROR  # For production

# Monitoring
# PROMETHEUS_ENABLED=false
# METRICS_PORT=9090

# =============================================================================
# INSTRUCTIONS FOR SETUP:
# =============================================================================
# 
# 1. Database Setup:
#    - For SQLite: No additional setup needed
#    - For PostgreSQL: Install PostgreSQL, create database and user
#    - For MySQL: Install MySQL, create database and user
# 
# 2. Elasticsearch Setup:
#    - Option 1 (Recommended): Use Elastic Cloud
#      * Sign up at https://cloud.elastic.co/
#      * Create a deployment
#      * Copy the endpoint URL and create an API key
#    - Option 2: Install Elasticsearch locally
#      * Download from https://www.elastic.co/downloads/elasticsearch
#      * Start the service and note the credentials
# 
# 3. Environment Setup:
#    - Copy this file to .env
#    - Replace placeholder values with actual values
#    - Test your configuration by running the application
# 
# 4. Security:
#    - Generate secure random values for secret keys
#    - Use environment-specific configurations
#    - Never commit .env file to version control
#    - Use different credentials for different environments